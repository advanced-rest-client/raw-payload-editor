{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "A raw payload input editor based on CodeMirror.\n\nThe element additionally shows Encode / Decode buttons if current content type value contains\n\"x-www-form-urlencoded\".\n\nThe element listens for `content-type-changed` custom event and updates the `contentType` property\nautomatically. This event is commonly used in ARC elements.\n\n### Example\n```\n<raw-payload-editor content-type=\"application/json\"></raw-payload-editor>\n```\n\n### Styling\n`<raw-payload-editor>` provides the following custom properties and mixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--raw-payload-editor` | Mixin applied to the element | `{}`\n`--raw-payload-editor-encode-buttons` | Mixin applied to encode / decode buttons container | `{}`",
      "summary": "",
      "path": "raw-payload-editor.html",
      "properties": [
        {
          "name": "_parentResizable",
          "type": "Object",
          "description": "The closest ancestor element that implements `IronResizableBehavior`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 36,
              "column": 6
            },
            "end": {
              "line": 39,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_parentResizableChanged\""
            }
          },
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_notifyingDescendant",
          "type": "boolean",
          "description": "True if this element is currently notifying its descendant elements of\nresize.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 45,
              "column": 6
            },
            "end": {
              "line": 48,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "eventsTarget",
          "type": "Object",
          "description": "Events handlers target. By default the element listens on\n`window` object. If set, all events listeners will be attached to this\nobject instead of `window`.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 73,
              "column": 8
            },
            "end": {
              "line": 76,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_eventsTargetChanged\""
            }
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_oldEventsTarget",
          "type": "Object",
          "description": "An event target used to attach listeners.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 78,
              "column": 8
            },
            "end": {
              "line": 78,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "AMP_RE",
          "type": "RegExp",
          "description": "Regexp to search for the `&` character",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/payload-parser-behavior/payload-parser-behavior.html",
            "start": {
              "line": 43,
              "column": 8
            },
            "end": {
              "line": 49,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "ArcBehaviors.PayloadParserBehavior"
        },
        {
          "name": "GT_RE",
          "type": "RegExp",
          "description": "Regexp to search for the `>` character",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/payload-parser-behavior/payload-parser-behavior.html",
            "start": {
              "line": 51,
              "column": 8
            },
            "end": {
              "line": 57,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "ArcBehaviors.PayloadParserBehavior"
        },
        {
          "name": "LT_RE",
          "type": "RegExp",
          "description": "Regexp to search for the `<` character",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/payload-parser-behavior/payload-parser-behavior.html",
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 65,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "ArcBehaviors.PayloadParserBehavior"
        },
        {
          "name": "SQUOT_RE",
          "type": "RegExp",
          "description": "Regexp to search for the `'` character",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/payload-parser-behavior/payload-parser-behavior.html",
            "start": {
              "line": 67,
              "column": 8
            },
            "end": {
              "line": 73,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "ArcBehaviors.PayloadParserBehavior"
        },
        {
          "name": "QUOT_RE",
          "type": "RegExp",
          "description": "Regexp to search for the `\"` character",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/payload-parser-behavior/payload-parser-behavior.html",
            "start": {
              "line": 75,
              "column": 8
            },
            "end": {
              "line": 81,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "ArcBehaviors.PayloadParserBehavior"
        },
        {
          "name": "value",
          "type": "string",
          "description": "Raw payload value",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 8
            },
            "end": {
              "line": 98,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueChanged\""
            }
          }
        },
        {
          "name": "contentType",
          "type": "string",
          "description": "Content-Type header value. Determines current code mirror mode.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 102,
              "column": 8
            },
            "end": {
              "line": 105,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_onContentTypeChanged\""
            }
          }
        },
        {
          "name": "encodeEnabled",
          "type": "boolean",
          "description": "Computed value, true if `contentType` contains `x-www-form-urlencoded`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 107,
              "column": 8
            },
            "end": {
              "line": 111,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "isJson",
          "type": "boolean",
          "description": "Computed value, true if `contentType` contains `/json`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 113,
              "column": 8
            },
            "end": {
              "line": 117,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "_cmGutters",
          "type": "Array",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 8
            },
            "end": {
              "line": 121,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[\"CodeMirror-lint-markers\"]"
        },
        {
          "name": "_lintObject",
          "type": "Object",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 122,
              "column": 8
            },
            "end": {
              "line": 127,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "_customStylesList",
          "type": "Array",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 8
            },
            "end": {
              "line": 128,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {}
          }
        }
      ],
      "methods": [
        {
          "name": "created",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 55,
              "column": 4
            },
            "end": {
              "line": 60,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "attached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 62,
              "column": 4
            },
            "end": {
              "line": 64,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "detached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 66,
              "column": 4
            },
            "end": {
              "line": 74,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "notifyResize",
          "description": "Can be called to manually notify a resizable and its descendant\nresizables of a resize change.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 80,
              "column": 4
            },
            "end": {
              "line": 92,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "assignParentResizable",
          "description": "Used to assign the closest resizable ancestor to this resizable\nif the ancestor detects a request for notifications.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 98,
              "column": 4
            },
            "end": {
              "line": 100,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "parentResizable"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "stopResizeNotificationsFor",
          "description": "Used to remove a resizable descendant from the list of descendants\nthat should be notified of a resize change.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 106,
              "column": 4
            },
            "end": {
              "line": 113,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "target"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "resizerShouldNotify",
          "description": "This method can be overridden to filter nested elements that should or\nshould not be notified by the current element. Return true if an element\nshould be notified, or false if it should not be notified.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 124,
              "column": 4
            },
            "end": {
              "line": 124,
              "column": 59
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "element",
              "type": "HTMLElement",
              "description": "A candidate descendant element that\nimplements `IronResizableBehavior`."
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if the `element` should be notified of resize."
          },
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_onDescendantIronResize",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 126,
              "column": 4
            },
            "end": {
              "line": 138,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_fireResize",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 140,
              "column": 4
            },
            "end": {
              "line": 145,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_onIronRequestResizeNotifications",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 147,
              "column": 4
            },
            "end": {
              "line": 162,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_parentResizableChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 164,
              "column": 4
            },
            "end": {
              "line": 168,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "parentResizable"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_notifyDescendant",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 170,
              "column": 4
            },
            "end": {
              "line": 181,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "descendant"
            }
          ],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "_requestResizeNotifications",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/iron-resizable-behavior/iron-resizable-behavior.html",
            "start": {
              "line": 183,
              "column": 4
            },
            "end": {
              "line": 211,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.IronResizableBehavior"
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 81,
              "column": 4
            },
            "end": {
              "line": 84,
              "column": 6
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 86,
              "column": 5
            },
            "end": {
              "line": 91,
              "column": 6
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_eventsTargetChanged",
          "description": "Removes old handlers (if any) and attaches listeners on new event\nevent target.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 99,
              "column": 4
            },
            "end": {
              "line": 105,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "eventsTarget",
              "type": "?Node",
              "description": "Event target to set handlers on. If not set it\nwill set handlers on the `window` object."
            }
          ],
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_attachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 4
            },
            "end": {
              "line": 141,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "_detachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 143,
              "column": 4
            },
            "end": {
              "line": 146,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ]
        },
        {
          "name": "htmlEscape",
          "description": "Escape HTML to save HTML text.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/payload-parser-behavior/payload-parser-behavior.html",
            "start": {
              "line": 90,
              "column": 4
            },
            "end": {
              "line": 107,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "html",
              "type": "String",
              "description": "A HTML string to be escaped."
            }
          ],
          "inheritedFrom": "ArcBehaviors.PayloadParserBehavior"
        },
        {
          "name": "formArrayToString",
          "description": "Parse input array to string x-www-form-urlencoded.\n\nNote that this function doesn't encodes the name and value. Use\n`this.formArrayToString(this.encodeUrlEncoded(arr))`\nto create a encoded string from the array.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/payload-parser-behavior/payload-parser-behavior.html",
            "start": {
              "line": 119,
              "column": 4
            },
            "end": {
              "line": 131,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "arr",
              "type": "Array.<Object>",
              "description": "Input array. Each element must contain an\nobject with `name` and `value` keys."
            }
          ],
          "return": {
            "type": "String",
            "desc": "A parsed string of `name`=`value` pairs of the input objects."
          },
          "inheritedFrom": "ArcBehaviors.PayloadParserBehavior"
        },
        {
          "name": "_modelItemToFormDataString",
          "description": "Creates a form data string for a single item.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/payload-parser-behavior/payload-parser-behavior.html",
            "start": {
              "line": 137,
              "column": 4
            },
            "end": {
              "line": 149,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "The model with `name` and `value` properties."
            }
          ],
          "return": {
            "type": "String",
            "desc": "Generated value string for x-www-form-urlencoded form."
          },
          "inheritedFrom": "ArcBehaviors.PayloadParserBehavior"
        },
        {
          "name": "stringToArray",
          "description": "Parse input string to array of x-www-form-urlencoded form parameters.\n\nThis function will not url-decode names and values. Please, use\n`this.decodeUrlEncoded(this.stringToArray(str))` to create an array\nof decoded parameters.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/payload-parser-behavior/payload-parser-behavior.html",
            "start": {
              "line": 161,
              "column": 4
            },
            "end": {
              "line": 175,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "input",
              "type": "String",
              "description": "A string of HTTP x-www-form-urlencoded parameters"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "An array of params with `name` and `value` keys."
          },
          "inheritedFrom": "ArcBehaviors.PayloadParserBehavior"
        },
        {
          "name": "_createParamsArray",
          "description": "Converts a string to an array with objects containing name and value keys",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/payload-parser-behavior/payload-parser-behavior.html",
            "start": {
              "line": 181,
              "column": 4
            },
            "end": {
              "line": 218,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "input",
              "type": "String",
              "description": "An input string"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "An array of params with `name` and `value` keys."
          },
          "inheritedFrom": "ArcBehaviors.PayloadParserBehavior"
        },
        {
          "name": "_appendArrayResult",
          "description": "Appends form data parameter to an array.\nIf the parameter already exists in the array it creates an array for\nthe value onstead of appending the same parameter.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/payload-parser-behavior/payload-parser-behavior.html",
            "start": {
              "line": 229,
              "column": 4
            },
            "end": {
              "line": 245,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "array",
              "type": "Array",
              "description": "An array to append the parameter"
            },
            {
              "name": "name",
              "type": "String",
              "description": "Name of the form data parameter"
            },
            {
              "name": "value",
              "type": "String",
              "description": "Value of the form data parameter"
            }
          ],
          "return": {
            "type": "Array",
            "desc": "Updated array"
          },
          "inheritedFrom": "ArcBehaviors.PayloadParserBehavior"
        },
        {
          "name": "encodeUrlEncoded",
          "description": "Encode payload to x-www-form-urlencoded string.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/payload-parser-behavior/payload-parser-behavior.html",
            "start": {
              "line": 251,
              "column": 4
            },
            "end": {
              "line": 267,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "input",
              "type": "(Array.<object> | String)",
              "description": "An input data."
            }
          ],
          "inheritedFrom": "ArcBehaviors.PayloadParserBehavior"
        },
        {
          "name": "_encodeValue",
          "description": "URL encodes a value.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/payload-parser-behavior/payload-parser-behavior.html",
            "start": {
              "line": 275,
              "column": 4
            },
            "end": {
              "line": 283,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "(String | Array.<String>)",
              "description": "Value to encode. Either string or\narray of strings."
            }
          ],
          "return": {
            "type": "(String | Array.<String>)",
            "desc": "Encoded value. The same type as the input."
          },
          "inheritedFrom": "ArcBehaviors.PayloadParserBehavior"
        },
        {
          "name": "decodeUrlEncoded",
          "description": "Decode x-www-form-urlencoded data.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/payload-parser-behavior/payload-parser-behavior.html",
            "start": {
              "line": 289,
              "column": 4
            },
            "end": {
              "line": 305,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "input",
              "type": "(Array.<object> | String)",
              "description": "An input data."
            }
          ],
          "inheritedFrom": "ArcBehaviors.PayloadParserBehavior"
        },
        {
          "name": "_decodeValue",
          "description": "URL decodes a value.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/payload-parser-behavior/payload-parser-behavior.html",
            "start": {
              "line": 313,
              "column": 4
            },
            "end": {
              "line": 321,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "(String | Array.<String>)",
              "description": "Value to decode. Either string or\narray of strings."
            }
          ],
          "return": {
            "type": "(String | Array.<String>)",
            "desc": "Decoded value. The same type as the input."
          },
          "inheritedFrom": "ArcBehaviors.PayloadParserBehavior"
        },
        {
          "name": "_paramValue",
          "description": "Parse input string as a payload param key or value.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/payload-parser-behavior/payload-parser-behavior.html",
            "start": {
              "line": 327,
              "column": 4
            },
            "end": {
              "line": 334,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "input",
              "type": "String",
              "description": "An input to parse."
            }
          ],
          "inheritedFrom": "ArcBehaviors.PayloadParserBehavior"
        },
        {
          "name": "_paramLineToFormObject",
          "description": "Parse a line of key=value http params into an object with `name` and `value` keys.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/payload-parser-behavior/payload-parser-behavior.html",
            "start": {
              "line": 342,
              "column": 4
            },
            "end": {
              "line": 361,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "input",
              "type": "String",
              "description": "A input line of x-www-form-urlencoded text tike `param=value`"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "A parsed object with `name` and `value` keys."
          },
          "inheritedFrom": "ArcBehaviors.PayloadParserBehavior"
        },
        {
          "name": "encodeQueryString",
          "description": "Returns a string where all characters that are not valid for a URL\ncomponent have been escaped. The escaping of a character is done by\nconverting it into its UTF-8 encoding and then encoding each of the\nresulting bytes as a %xx hexadecimal escape sequence.\n\nNote: this method will convert any space character into its escape\nshort form, '+' rather than %20. It should therefore only be used for\nquery-string parts.\n\nThe following character sets are **not** escaped by this method:\n- ASCII digits or letters\n- ASCII punctuation characters: ```- _ . ! ~ * ' ( )</pre>```\n\nNotice that this method <em>does</em> encode the URL component delimiter\ncharacters:<blockquote>\n\n```\n; / ? : & = + $ , #\n```",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/payload-parser-behavior/payload-parser-behavior.html",
            "start": {
              "line": 386,
              "column": 4
            },
            "end": {
              "line": 392,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str",
              "type": "String",
              "description": "A string containing invalid URL characters"
            }
          ],
          "return": {
            "type": "String",
            "desc": "a string with all invalid URL characters escaped"
          },
          "inheritedFrom": "ArcBehaviors.PayloadParserBehavior"
        },
        {
          "name": "decodeQueryString",
          "description": "Returns a string where all URL component escape sequences have been\nconverted back to their original character representations.\n\nNote: this method will convert the space character escape short form, '+',\ninto a space. It should therefore only be used for query-string parts.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/payload-parser-behavior/payload-parser-behavior.html",
            "start": {
              "line": 403,
              "column": 4
            },
            "end": {
              "line": 409,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str",
              "type": "String",
              "description": "string containing encoded URL component sequences"
            }
          ],
          "return": {
            "type": "String",
            "desc": "string with no encoded URL component encoded sequences"
          },
          "inheritedFrom": "ArcBehaviors.PayloadParserBehavior"
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 148,
              "column": 4
            },
            "end": {
              "line": 151,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "refresh",
          "description": "Forces render code-mirror content.\nShould be used to when the element becomes visible after being hidden.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 157,
              "column": 4
            },
            "end": {
              "line": 163,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onContentTypeChanged",
          "description": "Changes CodeMirror mode when the content type value is updated.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 168,
              "column": 4
            },
            "end": {
              "line": 177,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "ct"
            }
          ]
        },
        {
          "name": "_computeEncodeEnabled",
          "description": "Computes `encodeEnabled` based on content type.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 179,
              "column": 4
            },
            "end": {
              "line": 181,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "ct"
            }
          ]
        },
        {
          "name": "_computeIsJson",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 183,
              "column": 4
            },
            "end": {
              "line": 185,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "ct"
            }
          ]
        },
        {
          "name": "__computeIs",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 187,
              "column": 4
            },
            "end": {
              "line": 195,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "ct"
            },
            {
              "name": "needle"
            }
          ]
        },
        {
          "name": "_contentTypeHandler",
          "description": "Handler for the `content-type-changed` event. Sets the `contentType` property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 202,
              "column": 4
            },
            "end": {
              "line": 205,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ]
        },
        {
          "name": "_valueChanged",
          "description": "Handler for value change.\nIf the element is opened then it will fire change event.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 210,
              "column": 4
            },
            "end": {
              "line": 215,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ]
        },
        {
          "name": "_editorValueChanged",
          "description": "Called when the editor fires change event",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 221,
              "column": 4
            },
            "end": {
              "line": 226,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ]
        },
        {
          "name": "_onPaste",
          "description": "Formats JSON data on paste.\nIt only formats the input if no selection is applied, whole value\nis selcted or input is empty.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 232,
              "column": 4
            },
            "end": {
              "line": 251,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_cancelPaste",
          "description": "Tests if text formatting on paste is allowed",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 258,
              "column": 4
            },
            "end": {
              "line": 286,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "inputSize",
              "type": "Number",
              "description": "Size of current value"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True to disallow altering the value on paste."
          }
        },
        {
          "name": "_setupLinter",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 288,
              "column": 4
            },
            "end": {
              "line": 301,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "ct"
            }
          ]
        },
        {
          "name": "formatValue",
          "description": "Formats current value as it is a JSON object.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 305,
              "column": 4
            },
            "end": {
              "line": 316,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "minifyValue",
          "description": "Minifies JSON value by removing whitespaces.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 320,
              "column": 4
            },
            "end": {
              "line": 331,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_resizeHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 333,
              "column": 4
            },
            "end": {
              "line": 335,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "encodeValue",
          "description": "URL encodes payload value and resets the same value property.\nThis should be used only for payloads with x-www-form-urlencoded content-type.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 341,
              "column": 4
            },
            "end": {
              "line": 346,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "decodeValue",
          "description": "URL decodes payload value and resets the same value property.\nThis should be used only for payloads with x-www-form-urlencoded content-type.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 351,
              "column": 4
            },
            "end": {
              "line": 356,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 85,
          "column": 2
        },
        "end": {
          "line": 357,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "UiElements.RawPayloadEditor",
      "attributes": [
        {
          "name": "events-target",
          "description": "Events handlers target. By default the element listens on\n`window` object. If set, all events listeners will be attached to this\nobject instead of `window`.",
          "sourceRange": {
            "file": "bower_components/events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 73,
              "column": 8
            },
            "end": {
              "line": 76,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "value",
          "description": "Raw payload value",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 8
            },
            "end": {
              "line": 98,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "content-type",
          "description": "Content-Type header value. Determines current code mirror mode.",
          "sourceRange": {
            "start": {
              "line": 102,
              "column": 8
            },
            "end": {
              "line": 105,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "encode-enabled",
          "description": "Computed value, true if `contentType` contains `x-www-form-urlencoded`",
          "sourceRange": {
            "start": {
              "line": 107,
              "column": 8
            },
            "end": {
              "line": 111,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "is-json",
          "description": "Computed value, true if `contentType` contains `/json`",
          "sourceRange": {
            "start": {
              "line": 113,
              "column": 8
            },
            "end": {
              "line": 117,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "raw-payload-editor",
      "mixins": [
        "Polymer.IronResizableBehavior",
        "ArcBehaviors.EventsTargetBehavior",
        "ArcBehaviors.PayloadParserBehavior"
      ]
    }
  ]
}
